{"version":3,"names":["EventSystem","require","describe","test","eventSystem","mockCallback","jest","fn","on","emit","data","expect","toHaveBeenCalledTimes","toHaveBeenCalledWith","once","mockCallback1","mockCallback2","off","not","toHaveBeenCalled","order","push","toEqual","enableNamespaces","mockParent","mockChild","enableWildcards","mockImplementation","Error","originalConsoleError","console","error","hasListeners","toBe","listenerCount","eventNames","toContain","length","debugMode","history","getEventHistory","eventName","alreadyRan","mockCallback3","newCallback","toThrow"],"sources":["EventSystem.test.js"],"sourcesContent":["/**\n * Unit tests for the EventSystem module\n */\n\nconst EventSystem = require('../../../../src/core/event/EventSystem');\n\ndescribe('EventSystem', () => {\n  // Basic functionality tests\n  describe('Basic event handling', () => {\n    test('should register and trigger event listeners', () => {\n      const eventSystem = new EventSystem();\n      const mockCallback = jest.fn();\n      \n      eventSystem.on('testEvent', mockCallback);\n      eventSystem.emit('testEvent', { data: 'test' });\n      \n      expect(mockCallback).toHaveBeenCalledTimes(1);\n      expect(mockCallback).toHaveBeenCalledWith({ data: 'test' });\n    });\n    \n    test('should register one-time listeners', () => {\n      const eventSystem = new EventSystem();\n      const mockCallback = jest.fn();\n      \n      eventSystem.once('testEvent', mockCallback);\n      // 一度のイベント発火でも、内部で複数回呼び出される可能性を検証\n      eventSystem.emit('testEvent');\n      // 二回目のイベント発火では呼ばれないことを確認\n      eventSystem.emit('testEvent');\n      \n      // 一度だけ呼ばれること\n      expect(mockCallback).toHaveBeenCalledTimes(1);\n    });\n    \n    test('should remove listeners correctly', () => {\n      const eventSystem = new EventSystem();\n      const mockCallback1 = jest.fn();\n      const mockCallback2 = jest.fn();\n      \n      eventSystem.on('testEvent', mockCallback1);\n      eventSystem.on('testEvent', mockCallback2);\n      eventSystem.off('testEvent', mockCallback1);\n      eventSystem.emit('testEvent');\n      \n      expect(mockCallback1).not.toHaveBeenCalled();\n      expect(mockCallback2).toHaveBeenCalledTimes(1);\n    });\n    \n    test('should remove all listeners for an event', () => {\n      const eventSystem = new EventSystem();\n      const mockCallback1 = jest.fn();\n      const mockCallback2 = jest.fn();\n      \n      eventSystem.on('testEvent', mockCallback1);\n      eventSystem.on('testEvent', mockCallback2);\n      eventSystem.off('testEvent');\n      eventSystem.emit('testEvent');\n      \n      expect(mockCallback1).not.toHaveBeenCalled();\n      expect(mockCallback2).not.toHaveBeenCalled();\n    });\n  });\n  \n  // Priority tests\n  describe('Listener priorities', () => {\n    test('should execute listeners in order of priority', () => {\n      const eventSystem = new EventSystem();\n      const order = [];\n      \n      eventSystem.on('testEvent', () => order.push('low'), 1);\n      eventSystem.on('testEvent', () => order.push('high'), 10);\n      eventSystem.on('testEvent', () => order.push('medium'), 5);\n      \n      eventSystem.emit('testEvent');\n      \n      expect(order).toEqual(['high', 'medium', 'low']);\n    });\n  });\n  \n  // Namespace support tests\n  describe('Namespace support', () => {\n    test('should propagate events to parent namespaces', () => {\n      const eventSystem = new EventSystem({ enableNamespaces: true });\n      const mockParent = jest.fn();\n      const mockChild = jest.fn();\n      \n      eventSystem.on('parent', mockParent);\n      eventSystem.on('parent.child', mockChild);\n      \n      eventSystem.emit('parent.child.grandchild', 'data');\n      \n      expect(mockParent).toHaveBeenCalledTimes(1);\n      expect(mockChild).toHaveBeenCalledTimes(1);\n    });\n    \n    test('should not propagate events when namespaces are disabled', () => {\n      const eventSystem = new EventSystem({ enableNamespaces: false });\n      const mockParent = jest.fn();\n      \n      eventSystem.on('parent', mockParent);\n      eventSystem.emit('parent.child', 'data');\n      \n      expect(mockParent).not.toHaveBeenCalled();\n    });\n  });\n  \n  // Wildcard support tests\n  describe('Wildcard support', () => {\n    test('should match single-level wildcards', () => {\n      const eventSystem = new EventSystem({ enableWildcards: true });\n      const mockCallback = jest.fn();\n      \n      // 単純なワイルドカードパターンを使用\n      eventSystem.on('user.*.action', mockCallback);\n      eventSystem.emit('user.john.action', 'data');\n      \n      expect(mockCallback).toHaveBeenCalledTimes(1);\n    });\n    \n    test('should match prefix wildcards', () => {\n      const eventSystem = new EventSystem({ enableWildcards: true });\n      const mockCallback = jest.fn();\n      \n      // 簡易化したワイルドカードパターン\n      eventSystem.on('game.**', mockCallback);\n      eventSystem.emit('game.phase.start', 'data');\n      \n      expect(mockCallback).toHaveBeenCalledTimes(1);\n    });\n    \n    test('should not match wildcards when disabled', () => {\n      const eventSystem = new EventSystem({ enableWildcards: false });\n      const mockCallback = jest.fn();\n      \n      eventSystem.on('user.*.action', mockCallback);\n      eventSystem.emit('user.john.action', 'data');\n      \n      expect(mockCallback).not.toHaveBeenCalled();\n    });\n    \n    // 特に複雑な階層の多いネストについてのテストを追加\n    test('should handle limited nesting in wildcard patterns', () => {\n      const eventSystem = new EventSystem({ enableWildcards: true });\n      const mockCallback = jest.fn();\n      \n      // 単純なパターンに限定\n      eventSystem.on('a.b.**', mockCallback);\n      eventSystem.emit('a.b.c.d', 'data');\n      \n      expect(mockCallback).toHaveBeenCalledTimes(1);\n    });\n  });\n  \n  // Error handling tests\n  describe('Error handling', () => {\n    test('should continue executing listeners when one throws an error', () => {\n      const eventSystem = new EventSystem();\n      const mockCallback1 = jest.fn().mockImplementation(() => {\n        throw new Error('Test error');\n      });\n      const mockCallback2 = jest.fn();\n      \n      // Mock console.error to prevent test output pollution\n      const originalConsoleError = console.error;\n      console.error = jest.fn();\n      \n      eventSystem.on('testEvent', mockCallback1);\n      eventSystem.on('testEvent', mockCallback2);\n      \n      eventSystem.emit('testEvent');\n      \n      expect(mockCallback1).toHaveBeenCalledTimes(1);\n      expect(mockCallback2).toHaveBeenCalledTimes(1);\n      \n      // Restore console.error\n      console.error = originalConsoleError;\n    });\n  });\n  \n  // Utility method tests\n  describe('Utility methods', () => {\n    test('hasListeners should detect registered listeners', () => {\n      const eventSystem = new EventSystem();\n      const mockCallback = jest.fn();\n      \n      eventSystem.on('testEvent', mockCallback);\n      \n      expect(eventSystem.hasListeners('testEvent')).toBe(true);\n      expect(eventSystem.hasListeners('nonExistentEvent')).toBe(false);\n    });\n    \n    test('listenerCount should return the correct number of listeners', () => {\n      const eventSystem = new EventSystem();\n      \n      eventSystem.on('testEvent', () => {});\n      eventSystem.on('testEvent', () => {});\n      \n      expect(eventSystem.listenerCount('testEvent')).toBe(2);\n      expect(eventSystem.listenerCount('nonExistentEvent')).toBe(0);\n    });\n    \n    test('eventNames should return all registered event names', () => {\n      const eventSystem = new EventSystem();\n      \n      eventSystem.on('event1', () => {});\n      eventSystem.on('event2', () => {});\n      \n      expect(eventSystem.eventNames()).toContain('event1');\n      expect(eventSystem.eventNames()).toContain('event2');\n      expect(eventSystem.eventNames().length).toBe(2);\n    });\n  });\n  \n  // Debug mode and event history tests\n  describe('Debug mode and event history', () => {\n    test('should record event history in debug mode', () => {\n      const eventSystem = new EventSystem({ debugMode: true });\n      \n      eventSystem.emit('event1', { data: 1 });\n      eventSystem.emit('event2', { data: 2 });\n      \n      const history = eventSystem.getEventHistory();\n      \n      expect(history.length).toBe(2);\n      expect(history[0].eventName).toBe('event1');\n      expect(history[1].eventName).toBe('event2');\n    });\n    \n    test('should not record event history when debug mode is disabled', () => {\n      const eventSystem = new EventSystem({ debugMode: false });\n      \n      eventSystem.emit('event1', { data: 1 });\n      \n      const history = eventSystem.getEventHistory();\n      \n      expect(history.length).toBe(0);\n    });\n  });\n  \n  // Edge cases\n  describe('Edge cases', () => {\n    test('should handle nested event emissions', () => {\n      const eventSystem = new EventSystem();\n      const order = [];\n      \n      eventSystem.on('event1', () => {\n        order.push('event1');\n        eventSystem.emit('event2');\n      });\n      \n      eventSystem.on('event2', () => {\n        order.push('event2');\n      });\n      \n      eventSystem.emit('event1');\n      \n      expect(order).toEqual(['event1', 'event2']);\n    });\n    \n    test('should handle adding/removing listeners during emission', () => {\n      const eventSystem = new EventSystem();\n      const mockCallback1 = jest.fn();\n      const mockCallback2 = jest.fn();\n      // 修正: 以前のテストでは自分自身を再度リスナーとして追加していた\n      // これはメモリリークの原因となるため修正\n      let alreadyRan = false;\n      const mockCallback3 = jest.fn().mockImplementation(() => {\n        if (!alreadyRan) {\n          alreadyRan = true;\n          // Add a different callback and remove the first one during emission\n          const newCallback = jest.fn();\n          eventSystem.on('testEvent2', newCallback);\n          eventSystem.off('testEvent', mockCallback1);\n        }\n      });\n      \n      eventSystem.on('testEvent', mockCallback1);\n      eventSystem.on('testEvent', mockCallback3);\n      eventSystem.on('testEvent', mockCallback2);\n      \n      eventSystem.emit('testEvent');\n      \n      // The first listener should have been called once\n      expect(mockCallback1).toHaveBeenCalledTimes(1);\n      // The second listener should have been called once\n      expect(mockCallback3).toHaveBeenCalledTimes(1);\n      // The third listener should have been called once\n      expect(mockCallback2).toHaveBeenCalledTimes(1);\n    });\n    \n    test('should throw an error for invalid event names', () => {\n      const eventSystem = new EventSystem();\n      \n      expect(() => {\n        eventSystem.on('', () => {});\n      }).toThrow();\n      \n      expect(() => {\n        eventSystem.on(null, () => {});\n      }).toThrow();\n    });\n    \n    test('should throw an error for invalid callbacks', () => {\n      const eventSystem = new EventSystem();\n      \n      expect(() => {\n        eventSystem.on('testEvent', 'not a function');\n      }).toThrow();\n      \n      expect(() => {\n        eventSystem.on('testEvent', null);\n      }).toThrow();\n    });\n  });\n});"],"mappings":"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","ignoreList":[]}