{"version":3,"names":["ErrorHandler","ErrorCatalog","ErrorLevel","Validator","createErrorSystem","require","MockEventSystem","constructor","events","emit","eventName","data","push","getEvents","describe","eventSystem","beforeEach","test","expect","toBeDefined","errorSystem","errorHandler","toBeInstanceOf","validator","options","policy","throwOnLevel","FATAL","logLevel","WARNING","toBe","setErrorPolicy","validateCondition","PLAYER","INVALID_PLAYER_ID","code","errorEvents","filter","e","length","player","id","name","isAlive","role","canUseAbility","gameState","currentPhase","hasStarted","hasEnded","getPlayer","action","type","actor","target","ERROR","validatePlayerAction","validateRoleAction","validateGameState","not","toThrow","deadPlayerEvents","context","playerId"],"sources":["index.test.js"],"sourcesContent":["/**\n * Error System module integration tests\n */\n\nconst {\n  ErrorHandler,\n  ErrorCatalog,\n  ErrorLevel,\n  Validator,\n  createErrorSystem\n} = require('../../../../src/core/error');\n\n// Mock EventSystem\nclass MockEventSystem {\n  constructor() {\n    this.events = [];\n  }\n  \n  emit(eventName, data) {\n    this.events.push({ eventName, data });\n    return true;\n  }\n  \n  getEvents() {\n    return this.events;\n  }\n}\n\ndescribe('Error System', () => {\n  let eventSystem;\n  \n  beforeEach(() => {\n    eventSystem = new MockEventSystem();\n  });\n  \n  // Test module exports\n  test('should export all required components', () => {\n    expect(ErrorHandler).toBeDefined();\n    expect(ErrorCatalog).toBeDefined();\n    expect(ErrorLevel).toBeDefined();\n    expect(Validator).toBeDefined();\n    expect(createErrorSystem).toBeDefined();\n  });\n  \n  // Test factory function\n  describe('createErrorSystem', () => {\n    test('should create a complete error system', () => {\n      const errorSystem = createErrorSystem(eventSystem);\n      \n      expect(errorSystem.errorHandler).toBeInstanceOf(ErrorHandler);\n      expect(errorSystem.validator).toBeInstanceOf(Validator);\n    });\n    \n    test('should create error system with custom options', () => {\n      const options = {\n        policy: {\n          throwOnLevel: ErrorLevel.FATAL,\n          logLevel: ErrorLevel.WARNING\n        }\n      };\n      \n      const errorSystem = createErrorSystem(eventSystem, options);\n      \n      expect(errorSystem.errorHandler.policy.throwOnLevel).toBe(ErrorLevel.FATAL);\n      expect(errorSystem.errorHandler.policy.logLevel).toBe(ErrorLevel.WARNING);\n    });\n  });\n  \n  // Test integration between components\n  describe('Component Integration', () => {\n    test('should integrate validator with error handler', () => {\n      // Create error system\n      const { errorHandler, validator } = createErrorSystem(eventSystem);\n      \n      // Configure error handler not to throw (for this test)\n      errorHandler.setErrorPolicy({ throwOnLevel: ErrorLevel.FATAL });\n      \n      // Use validator which should use error handler internally\n      validator.validateCondition(false, ErrorCatalog.PLAYER.INVALID_PLAYER_ID.code);\n      \n      // Check that error was emitted through event system\n      const errorEvents = eventSystem.events.filter(e => e.eventName === 'error');\n      expect(errorEvents.length).toBe(1);\n      expect(errorEvents[0].data.code).toBe(ErrorCatalog.PLAYER.INVALID_PLAYER_ID.code);\n    });\n    \n    test('should handle complete validation flow', () => {\n      const { errorHandler, validator } = createErrorSystem(eventSystem);\n      \n      // Set up mock game objects\n      const player = { id: 1, name: 'Player 1', isAlive: true };\n      const role = { \n        name: 'seer',\n        canUseAbility: () => true\n      };\n      const gameState = {\n        currentPhase: 'night',\n        hasStarted: true,\n        hasEnded: false,\n        getPlayer: () => player\n      };\n      const action = {\n        type: 'fortune',\n        actor: 1,\n        target: 2\n      };\n      \n      // Configure to throw on ERROR\n      errorHandler.setErrorPolicy({ throwOnLevel: ErrorLevel.ERROR });\n      \n      // Validation should pass\n      expect(() => {\n        validator.validatePlayerAction(action, player, gameState);\n        validator.validateRoleAction(action, role, gameState);\n        validator.validateGameState(action, gameState);\n      }).not.toThrow();\n      \n      // Make player dead (should cause validation to fail)\n      player.isAlive = false;\n      \n      // Now validation should throw\n      expect(() => {\n        validator.validatePlayerAction(action, player, gameState);\n      }).toThrow();\n      \n      // Confirm error was emitted and has correct properties\n      const deadPlayerEvents = eventSystem.events.filter(\n        e => e.eventName === 'error.code.E0103' // DEAD_PLAYER_ACTION code\n      );\n      expect(deadPlayerEvents.length).toBe(1);\n      expect(deadPlayerEvents[0].data.context.playerId).toBe(1);\n    });\n  });\n});\n"],"mappings":"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","ignoreList":[]}